use Z_UNIVER

select min(AUDITORIUM.AUDITORIUM_CAPACITY) [Минимальная вместимость],
max(AUDITORIUM.AUDITORIUM_CAPACITY)[Максимальная вместимость],
sum(AUDITORIUM.AUDITORIUM_CAPACITY)[Суммарная вместимость],
count(*) [Количество всех аудиторий]
from AUDITORIUM

select AUDITORIUM_TYPE.AUDITORIUM_TYPENAME,
min(AUDITORIUM.AUDITORIUM_CAPACITY) [Минимальная вместимость],
max(AUDITORIUM_CAPACITY)[Максимальная вместимость],
sum(AUDITORIUM_CAPACITY)[Суммарная вместимость],
avg(AUDITORIUM_CAPACITY)[Средняя вместимость],
count(*) [Количество всех аудиторий]
from AUDITORIUM inner join AUDITORIUM_TYPE
on  AUDITORIUM_TYPE.AUDITORIUM_TYPE = AUDITORIUM.AUDITORIUM_TYPE
group by AUDITORIUM_TYPENAME

select *
from(select case when NOTE between 2 and 3 then '2-3'
when NOTE between 4 and 5 then '4-5'
when NOTE between 6 and 7 then '6-7'
when NOTE between 8 and 9 then '8-9'
when NOTE = 10 then '10'
else 'null or 1'
end [Оценки], count(*)[Количество]
from PROGRESS group by case
when NOTE between 2 and 3 then '2-3'
when NOTE between 4 and 5 then '4-5'
when NOTE between 6 and 7 then '6-7'
when NOTE between 8 and 9 then '8-9'
when NOTE = 10 then '10'
else 'null or 1'
end) as T
order by case[Оценки]
when '2-3' then 4
when '4-5' then 3
when '6-7' then 2
when '8-9' then 1
when '10' then 0
else 5
end

SELECT F.FACULTY, G.PROFESSION, G.IDGROUP,AVG((YEAR(GETDATE()) - G.YEAR_FIRST)) AS KURS, ROUND(AVG(CAST(P.NOTE AS float(4))),2) AS AVGNOTE
FROM FACULTY AS F
	INNER JOIN GROUPS AS G
	ON F.FACULTY = G.FACULTY
	INNER JOIN STUDENT AS S
	ON S.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS P
	ON P.IDSTUDENT = S.IDSTUDENT
GROUP BY G.PROFESSION,G.IDGROUP, F.FACULTY
ORDER BY AVGNOTE desc


SELECT F.FACULTY, G.PROFESSION, G.IDGROUP,AVG((YEAR(GETDATE()) - G.YEAR_FIRST)) AS KURS, ROUND(AVG(CAST(P.NOTE AS float(4))),2) AS AVGNOTE
FROM FACULTY AS F
	INNER JOIN GROUPS AS G
	ON F.FACULTY = G.FACULTY
	INNER JOIN STUDENT AS S
	ON S.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS P
	ON P.IDSTUDENT = S.IDSTUDENT
WHERE P.SUBJECT  = 'БД' OR P.SUBJECT = 'OAIP'
GROUP BY G.PROFESSION,G.IDGROUP, F.FACULTY
ORDER BY G.IDGROUP

use Z_UNIVER
SELECT F.FACULTY, G.PROFESSION, P.SUBJECT, ROUND(AVG(CAST(P.NOTE AS float(4))),2) AS AVGNOTE
FROM FACULTY AS F
	INNER JOIN GROUPS AS G
	ON F.FACULTY = G.FACULTY AND F.FACULTY = 'IT'
	INNER JOIN STUDENT AS S
	ON S.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS P
	ON P.IDSTUDENT = S.IDSTUDENT
GROUP BY F.FACULTY, G.PROFESSION, P.SUBJECT


SELECT F.FACULTY, G.PROFESSION, P.SUBJECT, ROUND(AVG(CAST(P.NOTE AS float(4))),2) AS AVGNOTE
FROM FACULTY AS F
	INNER JOIN GROUPS AS G
	ON F.FACULTY = G.FACULTY AND F.FACULTY = 'IT'
	INNER JOIN STUDENT AS S
	ON S.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS P
	ON P.IDSTUDENT = S.IDSTUDENT
GROUP BY ROLLUP(F.FACULTY, G.PROFESSION, P.SUBJECT)

SELECT F.FACULTY, G.PROFESSION, P.SUBJECT, ROUND(AVG(CAST(P.NOTE AS float(4))),2) AS AVGNOTE
FROM FACULTY AS F
	INNER JOIN GROUPS AS G
	ON F.FACULTY = G.FACULTY AND F.FACULTY = 'IT'
	INNER JOIN STUDENT AS S
	ON S.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS P
	ON P.IDSTUDENT = S.IDSTUDENT
GROUP BY CUBE(F.FACULTY, G.PROFESSION, P.SUBJECT)

use Z_UNIVER
SELECT F.FACULTY, PROFESSION.PROFESSION_NAME, S.SUBJECT, ROUND(AVG(CAST(PR.NOTE AS float)),2) AS AVGNOTE
FROM  FACULTY AS F
	inner join PROFESSION 
	on PROFESSION.FACULTY=F.FACULTY
	INNER JOIN GROUPS AS G
	ON G.PROFESSION = PROFESSION.PROFESSION
	inner join STUDENT as ST
	ON ST.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS PR
	ON PR.IDSTUDENT = ST.IDSTUDENT
	INNER JOIN SUBJECT AS S 
	ON S.SUBJECT = PR.SUBJECT 
WHERE F.FACULTY IN('IT')
GROUP BY F.FACULTY, PROFESSION.PROFESSION_NAME,S.SUBJECT

union all

SELECT F.FACULTY, PROFESSION.PROFESSION_NAME, S.SUBJECT, ROUND(AVG(CAST(PR.NOTE AS float)),2) AS AVGNOTE
FROM  FACULTY AS F
	inner join PROFESSION 
	on PROFESSION.FACULTY=F.FACULTY
	INNER JOIN GROUPS AS G
	ON G.PROFESSION = PROFESSION.PROFESSION
	inner join STUDENT as ST
	ON ST.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS PR
	ON PR.IDSTUDENT = ST.IDSTUDENT
	INNER JOIN SUBJECT AS S 
	ON S.SUBJECT = PR.SUBJECT 
WHERE F.FACULTY IN('HTiT')
GROUP BY F.FACULTY, PROFESSION.PROFESSION_NAME,S.SUBJECT

use Z_UNIVER
SELECT F.FACULTY, PROFESSION.PROFESSION_NAME, S.SUBJECT, ROUND(AVG(CAST(PR.NOTE AS float)),2) AS AVGNOTE
FROM  FACULTY AS F
	inner join PROFESSION 
	on PROFESSION.FACULTY=F.FACULTY
	INNER JOIN GROUPS AS G
	ON G.PROFESSION = PROFESSION.PROFESSION
	inner join STUDENT as ST
	ON ST.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS PR
	ON PR.IDSTUDENT = ST.IDSTUDENT
	INNER JOIN SUBJECT AS S 
	ON S.SUBJECT = PR.SUBJECT 
WHERE F.FACULTY IN('IT')
GROUP BY F.FACULTY, PROFESSION.PROFESSION_NAME,S.SUBJECT

except

SELECT F.FACULTY, PROFESSION.PROFESSION_NAME, S.SUBJECT, ROUND(AVG(CAST(PR.NOTE AS float)),2) AS AVGNOTE
FROM  FACULTY AS F
	inner join PROFESSION 
	on PROFESSION.FACULTY=F.FACULTY
	INNER JOIN GROUPS AS G
	ON G.PROFESSION = PROFESSION.PROFESSION
	inner join STUDENT as ST
	ON ST.IDGROUP = G.IDGROUP
	INNER JOIN PROGRESS AS PR
	ON PR.IDSTUDENT = ST.IDSTUDENT
	INNER JOIN SUBJECT AS S 
	ON S.SUBJECT = PR.SUBJECT 
WHERE F.FACULTY IN('HTiT')
GROUP BY F.FACULTY, PROFESSION.PROFESSION_NAME,S.SUBJECT

USE Z_UNIVER
select PR.SUBJECT, PR.NOTE,
(select count(*) from PROGRESS PR1
where PR1.SUBJECT = PR.SUBJECT
AND PR1.NOTE = PR.NOTE)[Количество]
FROM PROGRESS PR
GROUP BY PR.SUBJECT, PR.NOTE
HAVING NOTE = 8 OR NOTE = 9